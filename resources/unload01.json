{
    "$id": "https://unload.dev/unload01.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "properties": {
        "version": {
            "type": "number",
            "enum" : [0.1]
        },
        "app": {
            "type": "string"
        },
        "env": {
            "type": "string"
        },
        "region": {
            "type": "string",
            "enum" : [
                "ca-central-1",
                "eu-central-1",
                "eu-north-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "eu-south-1",
                "af-south-1",
                "me-south-1"
            ]
        },
        "runtime": {
            "type": "string",
            "enum": ["provided"]
        },
        "architecture": {
            "type": "string",
            "enum": ["x86_64", "arm64"]
        },
        "memory": {
            "type": "integer",
            "minimum": 128,
            "maximum": 10240
        },
        "timeout": {
            "type": "integer",
            "minimum": 1,
            "maximum": 900
        },
        "extensions": {
            "type": "array",
            "items": {
                "type": "string",
                "enum" : [
                    "amqp",
                    "blackfire",
                    "calendar",
                    "cassandra",
                    "decimal",
                    "ds",
                    "elastic-apm",
                    "gd",
                    "gnupg",
                    "gmp",
                    "grpc",
                    "igbinary",
                    "imagick",
                    "imap",
                    "ldap",
                    "mailparse",
                    "maxminddb",
                    "memcache",
                    "memcached",
                    "mongodb",
                    "msgpack",
                    "newrelic",
                    "odbc-snowflake",
                    "openswoole",
                    "oci8",
                    "pcov",
                    "rdkafka",
                    "redis",
                    "redis-igbinary",
                    "scoutapm",
                    "scrypt",
                    "spx",
                    "ssh2",
                    "symfony-runtime",
                    "sqlsrv",
                    "tidy",
                    "uuid",
                    "xdebug",
                    "yaml",
                    "pgsql",
                    "intl",
                    "apcu",
                    "pdo_pgsql"
                ]
            },
            "uniqueItems": true
        },
        "tmp": {
            "type": "integer",
            "minimum": 512,
            "maximum": 10240,
            "default": 512
        },
        "php": {
            "type": "number",
            "enum": [8.0, 8.1, 8.2]
        },
        "database": {
            "type": "object",
            "properties": {
                "engine": {
                    "type": "string",
                    "enum": ["aurora", "mysql"]
                },
                "disk": {
                    "type": "integer",
                    "minimum": 5,
                    "maximum": 16384
                },
                "backup-retention": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 35
                },
                "min-capacity": {
                    "type": "integer",
                    "enum": [1, 2, 4, 8, 16, 32, 64, 128, 256]
                },
                "max-capacity": {
                    "type": "integer",
                    "enum": [1, 2, 4, 8, 16, 32, 64, 128, 256]
                },
                "auto-pause": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 86400,
                    "exclusiveMinimum": false
                }
            },
            "if": {
                "properties": { "engine": { "const": "aurora" } }
            },
            "then": {
                    "properties": {
                        "version": {
                            "type": "string",
                            "enum": ["5.7.mysql-aurora.2.08.3"]
                        }
                    },
                    "required": ["min-capacity", "max-capacity", "auto-pause"]
                },
            "else": {
                "if": {
                    "properties": { "engine": { "const": "mysql" } }
                },
                "then": {
                    "properties": {
                        "version": {
                            "type": "string",
                            "enum": [
                                "8.0.34",
                                "8.0.33",
                                "8.0.32",
                                "8.0.28",
                                "8.0.27",
                                "8.0.26",
                                "8.0.25",
                                "8.0.23",
                                "5.7.41",
                                "5.7.38",
                                "5.7.37",
                                "5.7.34",
                                "5.7.33"
                            ]
                        }
                    },
                    "required": ["disk"]
                },
                "else": {

                }
            },
            "required": ["engine", "version"]
        },
        "cache": {
            "type": "object",
            "properties": {
                "engine": {
                    "type": "string",
                    "enum": ["redis"]
                }
            },
            "if": {
                "properties": { "engine": { "const": "redis" } }
            },
            "then": {
                "properties": {
                    "version": {
                        "type": "string",
                        "enum": ["7.0", "6.2", "6.0", "5.0.6", "5.0.5", "5.0.4", "5.0.3", "5.0.0", "4.0.10", "3.2.6"]
                     },
                    "size": {
                        "type": "string"
                    },
                    "shards": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 250
                    },
                    "replicas": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 5
                    },
                    "snapshot": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 35
                    }
                }
            },
            "else": {
            },
            "required": ["engine", "version"]
        },
        "buckets": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "enum": ["private", "public-read"]
                    },
                    "versioning": {
                        "type": "string",
                        "enum": ["yes", "no"]
                    },
                    "size": {
                        "type": "string",
                        "enum": ["1GB", "100GB", "250GB"]
                    }
                },
                "if": {
                    "properties": { "size": { "enum": ["1GB", "100GB", "250GB"] } }
                },
                "then": {
                },
                "else": {
                    "version-expiration": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "expiration": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "expiration-prefix": {
                        "type": "string"
                    }
                },
                "dependentRequired": {
                    "expiration-prefix": ["expiration"],
                    "expiration": ["expiration-prefix"]
                }
            }
        },
        "queues": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "delay": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 900
                    },
                    "retention": {
                        "type": "integer",
                        "minimum": 60,
                        "maximum": 1209600
                    },
                    "polling": {
                        "type": "string",
                        "enum": ["long", "short"]
                    },
                    "tries": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    "concurrency": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 900
                    },
                    "memory": {
                        "type": "integer",
                        "minimum": 128,
                        "maximum": 10240
                    },
                    "tmp": {
                        "type": "integer",
                        "minimum": 512,
                        "maximum": 10240
                    }
                }
            }
        }
    },
    "required": ["version", "app", "env", "region"]
}
